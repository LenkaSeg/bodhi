# -*- mode: ruby -*-
# vi: set ft=ruby :

# On your host:
# git clone https://github.com/fedora-infra/bodhi.git
# cd bodhi
# cp devel/Vagrantfile.example Vagrantfile
# vagrant up

# There is also an option when provisioning to setup bodhi
# to use the fedora stg infratucture for koji and src.stg (for package acls)
# To use this, use the command:
#
# vagrant --use-staging up
#
# vagrant will prompt you for for fas username for auth to koji. Additionally
# after the box is finished, you will need to aquire a kerberos ticket periodically
# with `kinit <fasusername>@STG.FEDORAPROJECT.ORG` for bodhi to be able to auth with
# the stg koji.

require 'etc'

Vagrant.configure("2") do |config|
  config.vm.define :bodhi do |bodhi|
    bodhi.vm.box = "fedora/34-cloud-base"

    # Forward traffic on the host to the development server on the guest.
    # You can change the host port that is forwarded to 5000 on the guest
    # if you have other services listening on your host's port 80.
    config.vm.network "forwarded_port", guest: 6543, host: 6543

    # Forward traffic on the host to the development waiverDB on the guest.
    config.vm.network "forwarded_port", guest: 6544, host: 6544

    # Forward traffic on the host to the development greenwave on the guest.
    config.vm.network "forwarded_port", guest: 6545, host: 6545

    # Forward traffic on the host to the RabbitMQ management UI on the guest.
    # This allows developers to view message queues at http://localhost:15672/
    bodhi.vm.network "forwarded_port", guest: 15672, host: 15672

    # Comment this line if you would like to disable the automatic update during provisioning
    bodhi.vm.provision "shell", inline: "sudo dnf upgrade -y"

    bodhi.vm.provider :libvirt do |libvirt|
      libvirt.cpus = Etc.nprocessors
      libvirt.cpu_mode = "host-passthrough"

      # The unit tests use a lot of RAM.
      libvirt.memory = 4096
    end
  end
end
